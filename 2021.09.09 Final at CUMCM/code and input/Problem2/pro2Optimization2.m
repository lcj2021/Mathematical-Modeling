clear all; clc;
dev = devi();   %% 均匀分布的随机数矩阵 11x24
load opti2Input

w = zeros(25, 1); %% 每一周的库存
o_opti = zeros(11, 24); %% 每一周的优化order
s_opti = zeros(11, 24); %% 每一周的优化supply
w(1) = 28200 * 2;
Q = [];     %% 订货成本

%% 对24周循环 做线性规划
for i = 1 : 24
   A= [
    -1/0.72*0.99, -1/0.72*0.99, -1/0.66*0.99, ...
    -1/0.66*0.99, -1/0.66*0.99, -1/0.72*0.99, ... 
    -1/0.6*0.99, -1/0.6*0.99, -1/0.6*0.99, -1/0.72*0.99, -1/0.6*0.99;
    1,0,0,0,0,0,0,0,0,0,0;
    0,1,0,0,0,0,0,0,0,0,0;
    0,0,1,0,0,0,0,0,0,0,0;
    0,0,0,1,0,0,0,0,0,0,0;
    0,0,0,0,1,0,0,0,0,0,0;
    0,0,0,0,0,1,0,0,0,0,0;
    0,0,0,0,0,0,1,0,0,0,0;
    0,0,0,0,0,0,0,1,0,0,0;
    0,0,0,0,0,0,0,0,1,0,0;
    0,0,0,0,0,0,0,0,0,1,0;
    0,0,0,0,0,0,0,0,0,0,1;   
    ];
    b = [
    -(28200 * 2 + cap(i) - w(i));
    2276.47 + dev(1,  i);
    967.87  + dev(2,  i);
    4870.80 + dev(3,  i);
    6000.00 + dev(4,  i);
    6000.00 + dev(5,  i);
    3909.27 + dev(6,  i);
    4811.13 + dev(7,  i);
    4929.13 + dev(8,  i);
    4897.73 + dev(9,  i);
    3108.20 + dev(10, i);
    3511.47 + dev(11, i);
    ];
    
    %% 等式约束 预测得到的缺货空窗期 不能订货
    Aeq = [
    g(1, i),g(2, i),g(3, i),g(4, i),g(5, i),g(6, i),...
    g(7, i),g(8, i),g(9, i), g(10, i), g(11, i)
    ];

    beq = [    
    0
    ];

    lb = zeros(1, 11);

    %% 目标函数:订购成本
    goal = [
    1, 1, 1.1, 1.1, 1.1, 1, 1.2, 1.2, 1.2, 1, 1.2
    ];
    
%     intcon = 1:8;
    [o,fval] = linprog(goal, A, b, Aeq, beq, lb); 
    Q = [Q, fval];
    o_opti(: , i) = o;
    
    for j = 1 : 11
        s_opti(j, i) = o(j) - dev(j,  i);
    end
    
    %% 更新库存
    w(i + 1) = w(i) - 28200 + 1/0.72* ( o(1) - dev(1,  i) )+ ...
    1/0.72* ( o(2) - dev(2,  i) )+1/0.66* ( o(3) - dev(3,  i) )+...
    1/0.66* ( o(4) - dev(4,  i) )+1/0.66* ( o(5) - dev(5,  i) )+...
    1/0.72* ( o(6) - dev(6,  i) )+1/0.6 * ( o(7) - dev(7,  i) )+...
    1/0.6 * ( o(8) - dev(8,  i) )+1/0.6 * ( o(9) - dev(9,  i) )+...
    1/0.72* (o(10) - dev(10, i) )+1/0.6 * (o(11) - dev(11, i) );
    
end

o_opti = ceil(o_opti);
s_opti([s_opti < 15]) = 0;
s_opti = ceil(s_opti);
save('opti2Output.mat','Q','dev','o_opti','s_opti','w');
function [out] = devi()         %% 生成order - supply的随机误差
    out = zeros(11, 24);
    for i = 1 : 11
        for j = 1 : 24
            out(i, j) = -9 + 10 * rand(1); %% 随机误差范围[-9, 1]
        end
    end
end